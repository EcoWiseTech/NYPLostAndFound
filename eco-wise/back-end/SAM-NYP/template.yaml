AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM-NYP

  Sample SAM Template for SAM-NYP

Globals:
  Function:
    Timeout: 60
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"

Resources:

  ## ------------------------------
  ## DynamoDB Table: ItemTable
  ## ------------------------------
  ItemTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ItemTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  ## ------------------------------
  ## S3 Bucket: ItemImageS3Bucket
  ## ------------------------------
  ItemImageS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "nyp-lost-and-found-${AWS::Region}-${AWS::AccountId}"
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
            AllowedHeaders:
              - "*"

  ## ------------------------------
  ## Lambda Function: StoreItemFunction
  ## ------------------------------
  StoreItemFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: StoreItemFunction/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Policies:
        - AmazonDynamoDBFullAccess # Allows full access to DynamoDB (adjust as needed)
        - AmazonS3FullAccess
      Environment:
        Variables:
          TABLE_NAME: !Ref ItemTable
          S3_BUCKET_NAME: !Ref ItemImageS3Bucket
      Events:
        StoreItemApiResource:
          Type: Api 
          Properties:
            Path: /StoreItem
            Method: post

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for StoreItem function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/StoreItem/"
  StoreItemFunctionArn:
    Description: "StoreItemFunction Lambda Function ARN"
    Value: !GetAtt StoreItemFunction.Arn
  StoreItemFunctionIamRole:
    Description: "IAM Role for StoreItemFunction"
    Value: !GetAtt StoreItemFunctionRole.Arn
  ItemTableName:
    Description: "DynamoDB Table Name"
    Value: !Ref ItemTable
  ItemImageS3BucketName:
    Description: "S3 Bucket Name for Item Images"
    Value: !Ref ItemImageS3Bucket
